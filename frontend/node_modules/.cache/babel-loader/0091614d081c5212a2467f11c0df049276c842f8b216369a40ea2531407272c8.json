{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavaScript Basic\\\\Uplift\\\\frontend\\\\src\\\\components\\\\DoctorDetail.js\",\n  _s = $RefreshSig$();\n// src/components/DoctorDetail.js\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Typography, Card, CardContent, CircularProgress } from '@mui/material';\nimport { getDoctorById } from '../services/api'; // Adjust the path as necessary\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorDetail = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Get doctor ID from URL params\n  const [doctor, setDoctor] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchDoctor = async () => {\n      try {\n        const data = await getDoctorById(id); // Fetch doctor details by ID\n        setDoctor(data);\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n        setLoading(false);\n      }\n    };\n    fetchDoctor();\n  }, [id]);\n  if (loading) return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(Typography, {\n    color: \"error\",\n    children: \"Error loading doctor details.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 23\n  }, this);\n  if (!doctor) return /*#__PURE__*/_jsxDEV(Typography, {\n    children: \"No doctor found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: doctor.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: [\"Specialization: \", doctor.specialization]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: [\"Contact: \", doctor.contact]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: [\"Email: \", doctor.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(DoctorDetail, \"N6S9e7y5gGxJb3H+gcJTrV/lML0=\", false, function () {\n  return [useParams];\n});\n_c = DoctorDetail;\nexport default DoctorDetail;\nvar _c;\n$RefreshReg$(_c, \"DoctorDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Typography","Card","CardContent","CircularProgress","getDoctorById","jsxDEV","_jsxDEV","DoctorDetail","_s","id","doctor","setDoctor","loading","setLoading","error","setError","fetchDoctor","data","fileName","_jsxFileName","lineNumber","columnNumber","color","children","variant","name","specialization","contact","email","_c","$RefreshReg$"],"sources":["C:/JavaScript Basic/Uplift/frontend/src/components/DoctorDetail.js"],"sourcesContent":["// src/components/DoctorDetail.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Typography, Card, CardContent, CircularProgress } from '@mui/material';\r\nimport { getDoctorById } from '../services/api'; // Adjust the path as necessary\r\n\r\nconst DoctorDetail = () => {\r\n    const { id } = useParams(); // Get doctor ID from URL params\r\n    const [doctor, setDoctor] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchDoctor = async () => {\r\n            try {\r\n                const data = await getDoctorById(id); // Fetch doctor details by ID\r\n                setDoctor(data);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                setError(error);\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchDoctor();\r\n    }, [id]);\r\n\r\n    if (loading) return <CircularProgress />;\r\n    if (error) return <Typography color=\"error\">Error loading doctor details.</Typography>;\r\n    if (!doctor) return <Typography>No doctor found.</Typography>;\r\n\r\n    return (\r\n        <Card>\r\n            <CardContent>\r\n                <Typography variant=\"h5\">{doctor.name}</Typography>\r\n                <Typography variant=\"body1\">Specialization: {doctor.specialization}</Typography>\r\n                <Typography variant=\"body2\">Contact: {doctor.contact}</Typography>\r\n                <Typography variant=\"body2\">Email: {doctor.email}</Typography>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default DoctorDetail;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}