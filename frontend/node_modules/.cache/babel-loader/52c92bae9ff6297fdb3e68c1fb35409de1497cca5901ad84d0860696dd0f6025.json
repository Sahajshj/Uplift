{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavaScript Basic\\\\Uplift\\\\frontend\\\\src\\\\components\\\\DoctorDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Container, Typography, Paper } from '@mui/material';\nimport { useParams } from 'react-router-dom';\nimport { getDoctorById } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorDetail = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [doctor, setDoctor] = useState(null);\n  useEffect(() => {\n    const fetchDoctor = async () => {\n      const data = await getDoctorById(id);\n      setDoctor(data);\n    };\n    fetchDoctor();\n  }, [id]);\n  if (!doctor) return /*#__PURE__*/_jsxDEV(Typography, {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      py: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: doctor.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [\"Specialization: \", doctor.specialization]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: doctor.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(DoctorDetail, \"7y1FPEgp2Bx/y8Ddtj6l3x+tba4=\", false, function () {\n  return [useParams];\n});\n_c = DoctorDetail;\nexport default DoctorDetail;\nvar _c;\n$RefreshReg$(_c, \"DoctorDetail\");","map":{"version":3,"names":["React","useEffect","useState","Container","Typography","Paper","useParams","getDoctorById","jsxDEV","_jsxDEV","DoctorDetail","_s","id","doctor","setDoctor","fetchDoctor","data","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","py","variant","gutterBottom","name","p","specialization","description","_c","$RefreshReg$"],"sources":["C:/JavaScript Basic/Uplift/frontend/src/components/DoctorDetail.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Container, Typography, Paper } from '@mui/material';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getDoctorById } from '../services/api';\r\n\r\nconst DoctorDetail = () => {\r\n    const { id } = useParams();\r\n    const [doctor, setDoctor] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchDoctor = async () => {\r\n            const data = await getDoctorById(id);\r\n            setDoctor(data);\r\n        };\r\n        fetchDoctor();\r\n    }, [id]);\r\n\r\n    if (!doctor) return <Typography>Loading...</Typography>;\r\n\r\n    return (\r\n        <Container sx={{ py: 4 }}>\r\n            <Typography variant=\"h4\" gutterBottom>{doctor.name}</Typography>\r\n            <Paper sx={{ p: 4 }}>\r\n                <Typography variant=\"h6\">Specialization: {doctor.specialization}</Typography>\r\n                <Typography variant=\"body1\">{doctor.description}</Typography>\r\n            </Paper>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default DoctorDetail;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,UAAU,EAAEC,KAAK,QAAQ,eAAe;AAC5D,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,aAAa,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACZ,MAAMc,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,IAAI,GAAG,MAAMT,aAAa,CAACK,EAAE,CAAC;MACpCE,SAAS,CAACE,IAAI,CAAC;IACnB,CAAC;IACDD,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,CAACH,EAAE,CAAC,CAAC;EAER,IAAI,CAACC,MAAM,EAAE,oBAAOJ,OAAA,CAACL,UAAU;IAAAa,QAAA,EAAC;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAY,CAAC;EAEvD,oBACIZ,OAAA,CAACN,SAAS;IAACmB,EAAE,EAAE;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAN,QAAA,gBACrBR,OAAA,CAACL,UAAU;MAACoB,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAR,QAAA,EAAEJ,MAAM,CAACa;IAAI;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,eAChEZ,OAAA,CAACJ,KAAK;MAACiB,EAAE,EAAE;QAAEK,CAAC,EAAE;MAAE,CAAE;MAAAV,QAAA,gBAChBR,OAAA,CAACL,UAAU;QAACoB,OAAO,EAAC,IAAI;QAAAP,QAAA,GAAC,kBAAgB,EAACJ,MAAM,CAACe,cAAc;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eAC7EZ,OAAA,CAACL,UAAU;QAACoB,OAAO,EAAC,OAAO;QAAAP,QAAA,EAAEJ,MAAM,CAACgB;MAAW;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEpB,CAAC;AAACV,EAAA,CAvBID,YAAY;EAAA,QACCJ,SAAS;AAAA;AAAAwB,EAAA,GADtBpB,YAAY;AAyBlB,eAAeA,YAAY;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}